name: build

on:
  push:
    branches: [ master ]
    paths:
      - 'Dockerfile'
      - '.github/**'


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        profile:
          - { base_image: "debian:buster"                                 , platforms: "linux/amd64,linux/arm64,linux/ppc64le" , tags: "docker.io/fnndsc/conda:python3.10.4,docker.io/fnndsc/conda:latest" }
          - { base_image: "docker.io/fnndsc/civet:2.1.1"                  , platforms: "linux/amd64,linux/arm64,linux/ppc64le" , tags: "docker.io/fnndsc/mni-conda-base:civet2.1.1-python3.10.4,docker.io/fnndsc/mni-conda-base:python3.10.4" }
          - { base_image: "docker.io/fnndsc/civet:unofficial"             , platforms: "linux/amd64,linux/arm64,linux/ppc64le" , tags: "docker.io/fnndsc/mni-conda-base:unofficial" }
          - { base_image: "nvcr.io/nvidia/cuda:11.6.0-base-ubuntu20.04"   , platforms: "linux/amd64,linux/arm64"               , tags: "docker.io/fnndsc/conda:python3.10.4-cuda11.6.0" }
    steps:
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        id: dockerhub_login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          tags: ${{ matrix.profile.tags }}
          platforms: ${{ matrix.profile.platforms }}
          build-args: BASE=${{ matrix.profile.base_image }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
